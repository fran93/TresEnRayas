<!DOCTYPE html>
<html>
    <head>
        <% include headerStuff %>
    </head>
    <body>
        
        <% include header %>
        
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-4">  
                    <div class="panel panel-primary"> 
                        <div class="panel-heading"> 
                            <h3 class="panel-title"> Lista de usuarios </h3> 
                        </div> 
                        <div class="panel-body">  
                            <div id='userList' class="list-group"> </div>
                        </div> 
                    </div>
                </div>     
                <div class="col-lg-4">  
                    <div class="panel panel-default">
                        <!-- Default panel contents -->
                        <div class="panel-heading">Estadísticas de <span class="badge"><%= user %></span> </div>

                        <!-- Table -->
                        <table class="table">
                            <tr>
                                <th scope="row">Partidas jugadas</th>
                                <td>0</td>
                            </tr>
                            <tr>
                                <th scope="row">Partidas ganadas</th>
                                <td>0</td>
                            </tr>
                            <tr>
                                <th scope="row">Partidas empatadas</th>
                                <td>0</td>
                            </tr>
                            <tr>
                                <th scope="row">Partidas perdidas</th>
                                <td>0</td>
                            </tr>
                            <tr>
                                <th scope="row">Porcentaje de victorias</th>
                                <td>0%</td>
                            </tr>
                        </table>
                    </div>
                    
                    <button id="letsplay" class="btn btn-primary" type="button">Retar</button>
                </div>
                
                <div class="col-lg-4">
                    <div id="challenge" class="modal-content" style="display: none;"> 
                        <div class="modal-header"> 
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button> 
                            <h4 class="modal-title">¡Has sido retado!</h4> 
                        </div> 
                        <div class="modal-body"> 
                            <p> ¡<span class='badge'>  </span> te ha retado! ¿Aceptas jugar contra él?</p> 
                        </div> 
                        <div class="modal-footer"> 
                            <button type="button" class="btn btn-danger">Rechazar</button> 
                            <button type="button" class="btn btn-success">Aceptar</button> 
                        </div> 
                    </div>
                    
                    <div class="alert alert-info" role="alert"  style="display: none;"> <strong>Esperando</strong> a que acepte la petición el otro jugador.</div>
                </div>
            </div>
        </div>
        
        <% include footer %>
        
        <script src="/socket.io/socket.io.js"></script>
        <script> 
            $( document ).ready(function() {
                var socket = io('/home');
                //el usuario que está viendo la interfaz
                var mainUser='<%= user %>';
                //el usuario seleccionado en la lista
                var selectedUser = '<%= user %>';
                //hashmap lista de usuario, para tener los estados a mano
                var states = {};

                //Resfrescar la lista de usuarios
                socket.on('usersList', function (users) {
                    //guardar el hashmap para su uso posterior
                    states = users;
                    //limpiar la lista
                    $('#userList').empty();
                    //añadir la lista de usuarios con sus correspondientes eventos
                    for (var i in users) {
                        $('#userList').append('<button type="button" value="'+ i +'" class="list-group-item">'+ i +' <span class="badge">'+ users[i] +'</span> </button>');
                    }
                    $('#userList button').click(function(){
                        loadStats($(this).val());
                    });
                });
                
                //Comprobar si alguien nos ha retado
                socket.on('challenge', function(user){
                    $('#challenge span.badge').text(user);
                    $('#challenge').show();
                });
                
                //Respuesta al reto
                socket.on('responseChallenge', function(json){
                    if(json.accepted){
                        window.location.href = "/tablero?rival="+json.rival;
                    }else{
                        $('.alert-info').hide();
                    }
                });
                
                //Aceptar el reto
                $('#challenge .btn-success').click(function(){
                    var rival = $('#challenge span.badge').text();
                    $('#challenge').hide();
                    socket.emit('responseChallenge', {user: rival, accepted: true});
                    window.location.href = "/tablero?rival="+rival;
                });
                //Rechazar el reto
                $('#challenge .btn-danger').click(function(){
                    $('#challenge').hide();
                    socket.emit('responseChallenge', {user: $('#challenge span.badge').text(), accepted: false});
                });
                
                $('#letsplay').click(function(){
                    //quitar la alerta antes de comprobarlo de nuevo
                    $('.alert-warning').hide();
                    //Ambos usuarios deben estar listos antes de mandar el resto
                    if(states[selectedUser]==='listo' && states[mainUser]==='listo'){
                        if(mainUser===selectedUser){
                            window.location.href = "/bot";
                        }else{
                            $('.alert-info').show();
                            socket.emit('challenge', selectedUser);
                        }
                    }else{
                        //eliminar el elemento si ya estaba
                        $('.alert-warning button').click();
                        //en caso contrario informamos al usuario 
                        $('.alert-info').parent().append(
                            '<div class="alert alert-warning alert-dismissible" role="alert">'+
                                '<button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">&times;</span></button>'+
                                '<strong>Ambos jugadores</strong> debéis de tener el estado de listo antes de que puedas retarlo.'+
                            ' </div>'
                        );
                        
                    }
                });
                
                //Cargar las estadísticas del usuario
                loadStats(mainUser);
                
                function loadStats(user){
                    //cambiar el usuario seleccionado
                    selectedUser = user;
                    //pedir los datos al servidor
                    socket.emit('statistics', user);
                    //cambiar el nombre 
                    $('.panel-heading span.badge').text(user);
                }
                
                socket.on('statistics', function(result){
                    if(result===null){
                        //actualizar los datos de las estadísticas
                        $('td:eq(0)').text(0);
                        $('td:eq(1)').text(0);
                        $('td:eq(2)').text(0);
                        $('td:eq(3)').text(0);
                        $('td:eq(4)').text('0%');
                    }else{
                        //actualizar los datos de las estadísticas
                        $('td:eq(0)').text(result.played);
                        $('td:eq(1)').text(result.victories);
                        $('td:eq(2)').text(result.tables);
                        $('td:eq(3)').text(result.defeats);
                        //calcular el porcentaje de victorias
                        var porcentaje = (result.victories/result.played)*100;
                        $('td:eq(4)').text(porcentaje+'%');
                    }
                });
                
                socket.on('resetState', function(){
                    //quitar el mensaje de warning y ocultar las ventanas con información
                    $('.alert-warning button').click();
                    $('.alert-info').hide();
                    $('#challenge').hide();
                });
            });

        </script>
        
    </body>
</html>
